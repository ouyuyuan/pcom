!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
10	grdvar.f90	/^10    jedn = jmt-1$/;"	l	subroutine:grdvar	file:
10	main.f90	/^10    continue$/;"	l	file:
100	bclinc.f90	/^100   continue $/;"	l	subroutine:bclinc	file:
100	invtri.f90	/^100   continue$/;"	l	subroutine:invtri	file:
100	isopyc.f90	/^100   continue$/;"	l	subroutine:isoflux	file:
100	readyc.f90	/^100   continue$/;"	l	subroutine:readyc	file:
100	setpbt.f90	/^100   continue$/;"	l	subroutine:setpbt	file:
100	tracer.f90	/^100   continue$/;"	l	subroutine:tracer	file:
1000	barotr.f90	/^1000  continue$/;"	l	subroutine:barotr	file:
1000	tracer.f90	/^1000  continue$/;"	l	subroutine:tracer	file:
1001	barotr.f90	/^1001  continue$/;"	l	subroutine:barotr	file:
101	isopyc.f90	/^101     continue$/;"	l	subroutine:isopyi	file:
102	isopyc.f90	/^102       continue$/;"	l	subroutine:isopyi	file:
120	barotr.f90	/^120   continue$/;"	l	subroutine:barotr	file:
120	bclinc.f90	/^120   continue $/;"	l	subroutine:bclinc	file:
120	isopyc.f90	/^120   continue$/;"	l	subroutine:isoflux	file:
1302	convect.f90	/^1302      continue$/;"	l	subroutine:convect	file:
1306	convect.f90	/^1306      continue$/;"	l	subroutine:convect	file:
1308	convect.f90	/^1308      continue$/;"	l	subroutine:convect	file:
1310	convect.f90	/^1310  continue$/;"	l	subroutine:convect	file:
1319	convect.f90	/^1319      lcona = lcon$/;"	l	subroutine:convect	file:
140	isopyc.f90	/^140   continue$/;"	l	subroutine:isoflux	file:
150	barotr.f90	/^150   continue$/;"	l	subroutine:barotr	file:
150	bclinc.f90	/^150   continue$/;"	l	subroutine:bclinc	file:
20	grdvar.f90	/^20    jsts = 2$/;"	l	subroutine:grdvar	file:
20	main.f90	/^20    continue$/;"	l	file:
200	readyc.f90	/^200   continue$/;"	l	subroutine:readyc	file:
200	tracer.f90	/^200   continue$/;"	l	subroutine:tracer	file:
25	setpn.f90	/^25    pre(1)   = c0$/;"	l	subroutine:setpn	file:
30	main.f90	/^30    continue$/;"	l	file:
300	tracer.f90	/^300   continue$/;"	l	subroutine:tracer	file:
40	main.f90	/^40    continue$/;"	l	file:
801	inirun.f90	/^801   format(\/1x,'nss=',i3,2x,'ncc=',i3,2x,'nbb=',i3\/)$/;"	l	subroutine:inirun	file:
9100	isopyc.f90	/^9100  format (\/,' =>Error: kisrpl is ',i3,' at k ',1x,i3,' in isopyc.F')$/;"	l	subroutine:isopyi	file:
9110	isopyc.f90	/^9110  format (\/,' =>Error: krplin is ',i3,' at m ',1x,i3)$/;"	l	subroutine:isopyi	file:
96	isopyc.f90	/^  96  format (\/,' isopycnal reference pressure levels (kisrpl) = ', &$/;"	l	subroutine:isopyi	file:
97	isopyc.f90	/^  97  format (\/,' reference pressure level indices (krplin) = ', &$/;"	l	subroutine:isopyi	file:
98	isopyc.f90	/^  98  format (\/,' vertical variation of "ahisop" (fzisop) = ')$/;"	l	subroutine:isopyi	file:
99	isopyc.f90	/^  99  format (5(1x,e12.6))$/;"	l	subroutine:isopyi	file:
K1	isopyc.h	/^      real    K1,K2,K3$/;"	v
K1	main.f90	/^      real, allocatable :: K1 /;"	v
K2	isopyc.h	/^      real    K1,K2,K3$/;"	v
K2	main.f90	/^      real, allocatable :: K2 /;"	v
K3	main.f90	/^      real, allocatable :: K3 /;"	v
adv_vbtiso	main.f90	/^      real, allocatable :: adv_vbtiso(/;"	v
adv_vetiso	main.f90	/^      real, allocatable :: adv_vetiso(/;"	v
adv_vntiso	main.f90	/^      real, allocatable :: adv_vntiso(/;"	v
afb1	param.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afb1	scalar.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afb1	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
afb2	param.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afb2	scalar.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afb2	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
afc1	param.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afc1	scalar.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afc1	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
afc2	param.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afc2	scalar.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
afc2	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
aft1	param.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
aft1	scalar.h	/^      real    afb1,afc1,aft1,afb2,afc2,aft2$/;"	v
aft1	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
aft2	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
ah	main.f90	/^      real, allocatable :: ah(/;"	v
ah	scalar.h	/^      real    am,ah,kappa_m,gamma_t,gamma_s,cdbot,gravr$/;"	v
ah	scalar.h	/^!      common \/scalar\/ am,ah,kappa_m,gamma_t,gamma_s,cdbot$/;"	v
ah_c	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
ahisop	isopyc.h	/^      common \/cisop\/ ahisop, athkdf, fzisop(km), slmxr $/;"	v
ahisop	isopyc.h	/^      real    ahisop, athkdf, fzisop, slmxr$/;"	v
ahisop	isopyc.h	/^!     ahisop = isopycnal tracer diffusivity (cm**2\/sec) $/;"	v
ahisop	param.h	/^      real slmxr,ahisop,athkdf,smth_start_nlat,smth_start_slat$/;"	v
am	main.f90	/^      real, allocatable :: am(/;"	v
am	scalar.h	/^      real    am,ah,kappa_m,gamma_t,gamma_s,cdbot,gravr$/;"	v
am	scalar.h	/^!      common \/scalar\/ am,ah,kappa_m,gamma_t,gamma_s,cdbot$/;"	v
am_c	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
area	main.f90	/^      real rdy,area,/;"	v
asselin_b	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
asselin_c	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
asselin_t	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
athkdf	isopyc.h	/^      common \/cisop\/ ahisop, athkdf, fzisop(km), slmxr $/;"	v
athkdf	isopyc.h	/^      real    ahisop, athkdf, fzisop, slmxr$/;"	v
athkdf	param.h	/^      real slmxr,ahisop,athkdf,smth_start_nlat,smth_start_slat$/;"	v
barotr	barotr.f90	/^      subroutine barotr(/;"	s
bcf	main.f90	/^      real, allocatable :: bcf /;"	v
bclinc	bclinc.f90	/^      subroutine bclinc(/;"	s
bcp	main.f90	/^      real, allocatable :: bcp /;"	v
bcs	main.f90	/^      real, allocatable :: bcs /;"	v
bct	main.f90	/^      real, allocatable :: bct /;"	v
bcu	main.f90	/^      real, allocatable :: bcu /;"	v
bcv	main.f90	/^      real, allocatable :: bcv /;"	v
c0	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c1	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c1440	pconst.h	/^      real c60,c1440,c3600$/;"	v
c1e3	pconst.h	/^      real c1e3,c1em4,c1em12$/;"	v
c1em4	pconst.h	/^      real c1e3,c1em4,c1em12$/;"	v
c2	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c25	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c2dtts	param.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
c2dtts	scalar.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
c2dtts	scalar.h	/^!      common \/scalar\/ dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
c2dtuv	param.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
c2dtuv	scalar.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
c2dtuv	scalar.h	/^!      common \/scalar\/ dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
c3	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c4	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c5	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c6	pconst.h	/^      real c0,c1,c2,c3,c4,c5,c6,c25,c35$/;"	v
c60	pconst.h	/^      real c60,c1440,c3600$/;"	v
cdbot	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
cdbot	scalar.h	/^      real    am,ah,kappa_m,gamma_t,gamma_s,cdbot,gravr$/;"	v
convect	convect.f90	/^      subroutine convect(/;"	s
cost	main.f90	/^      real, allocatable :: cost /;"	v
cosu	main.f90	/^      real, allocatable :: cosu /;"	v
cv1	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
cv1	main.f90	/^      real, allocatable :: cv1 /;"	v
cv2	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
cv2	main.f90	/^      real, allocatable :: cv2 /;"	v
daymd	calendar.h	/^      data daymd   \/15,15,15,15,15,15,15,15,15,15,15,15\/$/;"	v
daymd	param.h	/^      data daymd   \/15,15,15,15,15,15,15,15,15,15,15,15\/$/;"	v
daypm	calendar.h	/^      data daypm   \/30,30,30,30,30,30,30,30,30,30,30,30\/$/;"	v
daypm	param.h	/^      data daypm   \/30,30,30,30,30,30,30,30,30,30,30,30\//;"	v
dciso1	isopyc.h	/^      real    dciso1, dciso2$/;"	v
ddd	main.f90	/^      real, allocatable :: ddd /;"	v
decibar	param.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
decibar	scalar.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltap	param.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltap	scalar.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltap	scalar.h	/^!      common \/scalar\/ deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltas	param.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltas	scalar.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltas	scalar.h	/^!      common \/scalar\/ deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltat	param.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltat	scalar.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
deltat	scalar.h	/^!      common \/scalar\/ deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
dens	density.f90	/^      function dens(/;"	f
density	density.f90	/^      subroutine density(/;"	s
depth	isopyc.h	/^!                      depth, respectively. also, the elements of "dptlim"$/;"	v
diag	diag.f90	/^      subroutine diag(/;"	s
diffu	main.f90	/^      real, allocatable :: diffu /;"	v
diffv	main.f90	/^      real, allocatable :: diffv /;"	v
dis_var_int	density.f90	/^      subroutine dis_var_int(/;"	s
dis_var_real	density.f90	/^      subroutine dis_var_real(/;"	s
dis_var_real1d	density.f90	/^      subroutine dis_var_real1d(/;"	s
div_array_int2d	density.f90	/^      subroutine div_array_int2d(/;"	s
div_array_real1d	density.f90	/^      subroutine div_array_real1d(/;"	s
div_array_real2d	density.f90	/^      subroutine div_array_real2d(/;"	s
div_array_real3d	density.f90	/^      subroutine div_array_real3d(/;"	s
div_array_real4d	density.f90	/^      subroutine div_array_real4d(/;"	s
div_array_real5d	density.f90	/^      subroutine div_array_real5d(/;"	s
dlam	param.h	/^      real dlam,dphi,phis$/;"	v
dphi	param.h	/^      real dlam,dphi,phis$/;"	v
dslope	isopyc.h	/^      common \/cisop\/ dslope, slopec$/;"	v
dslope	isopyc.h	/^      real    dslope, slopec$/;"	v
dtsf	param.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtsf	scalar.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtsf	scalar.h	/^!      common \/scalar\/ dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtts	param.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtts	param.h	/^!     dtts    = time step for tracers (in seconds)$/;"	v
dtts	scalar.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtts	scalar.h	/^!      common \/scalar\/ dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtuv	param.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtuv	scalar.h	/^      real    dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
dtuv	scalar.h	/^!      common \/scalar\/ dtts,dtuv,dtsf,c2dtts,c2dtuv,c2dtsf$/;"	v
du	main.f90	/^      real, allocatable :: du /;"	v
dub	main.f90	/^      real, allocatable :: dub /;"	v
dub	prog.h	/^      real du,dv,dub,dvb$/;"	v
dv	main.f90	/^      real, allocatable :: dv /;"	v
dv	prog.h	/^      real du,dv,dub,dvb$/;"	v
dvb	main.f90	/^      real, allocatable :: dvb /;"	v
dxdyt	grdvar.h	/^      real dxdyt,dxdyu,area$/;"	v
dxdyt	main.f90	/^      real, allocatable :: dxdyt /;"	v
dxdyu	grdvar.h	/^      real dxdyt,dxdyu,area$/;"	v
dxdyu	main.f90	/^      real, allocatable :: dxdyu /;"	v
dz	grdvar.h	/^!     dz    = thickness of "t" and "u" grid cells$/;"	v
dz	main.f90	/^      real, allocatable :: dz /;"	v
dz0	main.f90	/^      real, allocatable :: dz0 /;"	v
e	main.f90	/^      rea/;"	v
east	main.f90	/^      integer west,east,/;"	v
ebea	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
ebea	main.f90	/^      real, allocatable :: ebea /;"	v
ebeb	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
ebeb	main.f90	/^      real, allocatable :: ebeb /;"	v
ebla	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
ebla	main.f90	/^      real, allocatable :: ebla /;"	v
eblb	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
eblb	main.f90	/^      real, allocatable :: eblb /;"	v
emp	main.f90	/^      real, allocatable :: emp /;"	v
endtime	main.f90	/^      real rdy,area,seadp(10000),startime,endtime$/;"	v
epea	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
epea	main.f90	/^      real, allocatable :: epea /;"	v
epeb	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
epeb	main.f90	/^      real, allocatable :: epeb /;"	v
epla	grdvar.h	/^      real ebea,ebeb,ebla,eblb,epea,epeb,epla,eplb$/;"	v
epla	main.f90	/^      real, allocatable :: epla /;"	v
eplb	main.f90	/^      real, allocatable :: eplb /;"	v
euler_back	param.h	/^      logical euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
euler_back	scalar.h	/^      logical euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
euler_back	scalar.h	/^!      common \/switcr\/ euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
fah	param.h	/^      integer fam,fah,fkm,fkh$/;"	v
fam	param.h	/^      integer fam,fah,fkm,fkh$/;"	v
ff	main.f90	/^      real, allocatable :: ff /;"	v
fixp	main.f90	/^      real, allocatable :: fixp /;"	v
fkm	param.h	/^      integer fam,fah,fkm,fkh$/;"	v
fzisop	isopyc.h	/^      real    ahisop, athkdf, fzisop, slmxr$/;"	v
fzisop	main.f90	/^      real, allocatable :: fzisop /;"	v
gamma_s	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
gamma_s	scalar.h	/^      real    am,ah,kappa_m,gamma_t,gamma_s,cdbot,gravr$/;"	v
gamma_s	scalar.h	/^!      common \/scalar\/ am,ah,kappa_m,gamma_t,gamma_s,cdbot$/;"	v
gamma_t	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
gamma_t	scalar.h	/^      real    am,ah,kappa_m,gamma_t,gamma_s,cdbot,gravr$/;"	v
gamma_t	scalar.h	/^!      common \/scalar\/ am,ah,kappa_m,gamma_t,gamma_s,cdbot$/;"	v
gath_array_int2d	density.f90	/^      subroutine gath_array_int2d(/;"	s
gath_array_real1d	density.f90	/^      subroutine gath_array_real1d(/;"	s
gath_array_real2d	density.f90	/^      subroutine gath_array_real2d(/;"	s
gath_array_real3d	density.f90	/^      subroutine gath_array_real3d(/;"	s
gath_array_real4d	density.f90	/^      subroutine gath_array_real4d(/;"	s
gath_array_real5d	density.f90	/^      subroutine gath_array_real5d(/;"	s
gath_merid_real2d	density.f90	/^      subroutine gath_merid_real2d(/;"	s
gath_var_real	density.f90	/^      subroutine gath_var_real(/;"	s
gm90	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
grdvar	grdvar.f90	/^      subroutine grdvar(/;"	s
ierr	main.f90	/^      integer myid,numprocs,namelen,rc,ierr,/;"	v
implicitvmix	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
inirun	inirun.f90	/^      subroutine inirun(/;"	s
interp	interp.f90	/^      subroutine interp(/;"	s
invtri	invtri.f90	/^      subroutine invtri /;"	s
io_tsuvp	param.h	/^      integer io_tsuvp,io_restr$/;"	v
io_tsuvp	scalar.h	/^      integer io_tsuvp,io_restr$/;"	v
io_tsuvp	scalar.h	/^!      common \/switcr\/ io_tsuvp,io_restr$/;"	v
isoadv	isopyc.f90	/^      subroutine isoadv(/;"	s
isoflux	isopyc.f90	/^      subroutine isoflux(/;"	s
isopyc	isopyc.f90	/^      subroutine isopyc(/;"	s
isopyi	isopyc.f90	/^      subroutine isopyi(/;"	s
isow	isopyc.f90	/^      subroutine isow(/;"	s
istatus	main.f90	/^      integer myid,numprocs,namelen,rc,ierr,istatus,/;"	v
itn	grdvar.h	/^      integer itn,ivn$/;"	v
itn	main.f90	/^      integer, allocatable :: itn /;"	v
ivn	main.f90	/^      integer, allocatable :: ivn /;"	v
jedn	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
jstn	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
jsts	scalar.h	/^!      common \/scalar\/ afb1,afc1,aft1,afb2,afc2,aft2,jstn,jedn,jsts,jeds$/;"	v
k1_3	isopyc.f90	/^      subroutine k1_3(/;"	s
k2_3	isopyc.f90	/^      subroutine k2_3(/;"	s
k3_123	isopyc.f90	/^      subroutine k3_123(/;"	s
kappa_h	main.f90	/^      real, allocatable :: kappa_h(/;"	v
kappa_m	main.f90	/^      real, allocatable :: kappa_m(/;"	v
kappa_m	scalar.h	/^      real    am,ah,kappa_m,gamma_t,gamma_s,cdbot,gravr$/;"	v
kappa_m	scalar.h	/^!      common \/scalar\/ am,ah,kappa_m,gamma_t,gamma_s,cdbot$/;"	v
kh_c	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
km_c	param.h	/^      real    am_c,ah_c,km_c,kh_c,gamma_t,gamma_s,cdbot,gravr$/;"	v
kref	isopyc.h	/^      real    kref,rdz0$/;"	v
kref	main.f90	/^      real, allocatable :: kref /;"	v
lat	main.f90	/^      real, allocatable :: lat /;"	v
leapfrog_b	param.h	/^      logical euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
leapfrog_b	scalar.h	/^      logical euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
leapfrog_b	scalar.h	/^!      common \/switcr\/ euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
leapfrog_c	param.h	/^      logical euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
leapfrog_c	scalar.h	/^      logical euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
leapfrog_c	scalar.h	/^!      common \/switcr\/ euler_back,leapfrog_b,leapfrog_c,leapfrog_t$/;"	v
mat_myid	main.f90	/^      integer, allocatable :: mat_myid(/;"	v
mode_c	main.f90	/^      integer  mode_c,/;"	v
mode_t	main.f90	/^      integer  mode_c,mode_t,/;"	v
monname	calendar.h	/^      data monname \/'jan','feb','mar','apr','may','jun', &$/;"	v
monname	param.h	/^      data monname \/'jan','feb','mar','apr','may','jun', &$/;"	v
month	calendar.h	/^      integer   month,year,mth,day$/;"	v
month	calendar.h	/^!      common \/calend\/ month,year,mth,day$/;"	v
month	param.h	/^      integer   month,year,mth,day$/;"	v
mth	calendar.h	/^      integer   month,year,mth,day$/;"	v
mth	calendar.h	/^!      common \/calend\/ month,year,mth,day$/;"	v
mth	param.h	/^      integer   month,year,mth,day$/;"	v
myid	main.f90	/^      integer myid,/;"	v
namelen	main.f90	/^      integer myid,numprocs,namelen,/;"	v
nbb	scalar.h	/^!      common \/scalar\/ nss,ncc,nbb,onbb,oncc,onbc$/;"	v
ncc	scalar.h	/^!      common \/scalar\/ nss,ncc,nbb,onbb,oncc,onbc$/;"	v
ncpux	main.f90	/^      integer myid,numprocs,namelen,rc,ierr,istatus,ncpux,/;"	v
ncpuy	main.f90	/^      integer myid,numprocs,namelen,rc,ierr,istatus,ncpux,ncpuy$/;"	v
north	main.f90	/^      integer west,east,north,/;"	v
nss	scalar.h	/^!      common \/scalar\/ nss,ncc,nbb,onbb,oncc,onbc$/;"	v
numprocs	main.f90	/^      integer myid,numprocs,/;"	v
omega	pconst.h	/^      real pi,torad,radius,omega,grav$/;"	v
onbb	param.h	/^      real    onbb,oncc,onbc$/;"	v
onbb	scalar.h	/^      real    onbb,oncc,onbc$/;"	v
onbb	scalar.h	/^!      common \/scalar\/ nss,ncc,nbb,onbb,oncc,onbc$/;"	v
oncc	param.h	/^      real    onbb,oncc,onbc$/;"	v
oncc	scalar.h	/^      real    onbb,oncc,onbc$/;"	v
oncc	scalar.h	/^!      common \/scalar\/ nss,ncc,nbb,onbb,oncc,onbc$/;"	v
p125	pconst.h	/^      real p125,p25,p5$/;"	v
p25	pconst.h	/^      real p125,p25,p5$/;"	v
pax	main.f90	/^      real, allocatable :: pax /;"	v
pax	prog.h	/^      real rhodp,pax,pay$/;"	v
pay	main.f90	/^      real, allocatable :: pay /;"	v
pbt	main.f90	/^      real, allocatable :: pbt /;"	v
pbt	prog.h	/^      real t,up,vp,pbt,upb,vpb$/;"	v
pbxn	main.f90	/^      real, allocatable :: pbxn /;"	v
pbxn	prog.h	/^      real pbxn,pbxs,pcxn,pcxs,pdxn,pdxs$/;"	v
pbxs	main.f90	/^      real, allocatable :: pbxs /;"	v
pbxs	prog.h	/^      real pbxn,pbxs,pcxn,pcxs,pdxn,pdxs$/;"	v
pbye	main.f90	/^      real, allocatable :: pbye /;"	v
pbye	prog.h	/^      real pbye,pbyw,pcye,pcyw,pdye,pdyw$/;"	v
pbyw	main.f90	/^      real, allocatable :: pbyw /;"	v
pbyw	prog.h	/^      real pbye,pbyw,pcye,pcyw,pdye,pdyw$/;"	v
pcxn	main.f90	/^      real, allocatable :: pcxn /;"	v
pcxn	prog.h	/^      real pbxn,pbxs,pcxn,pcxs,pdxn,pdxs$/;"	v
pcxs	main.f90	/^      real, allocatable :: pcxs /;"	v
pcxs	prog.h	/^      real pbxn,pbxs,pcxn,pcxs,pdxn,pdxs$/;"	v
pcye	main.f90	/^      real, allocatable :: pcye /;"	v
pcye	prog.h	/^      real pbye,pbyw,pcye,pcyw,pdye,pdyw$/;"	v
pcyw	main.f90	/^      real, allocatable :: pcyw /;"	v
pcyw	prog.h	/^      real pbye,pbyw,pcye,pcyw,pdye,pdyw$/;"	v
pdxn	main.f90	/^      real, allocatable :: pdxn /;"	v
pdxn	prog.h	/^      real pbxn,pbxs,pcxn,pcxs,pdxn,pdxs$/;"	v
pdxs	main.f90	/^      real, allocatable :: pdxs /;"	v
pdye	main.f90	/^      real, allocatable :: pdye /;"	v
pdye	prog.h	/^      real pbye,pbyw,pcye,pcyw,pdye,pdyw$/;"	v
pdyw	main.f90	/^      real, allocatable :: pdyw /;"	v
phib	main.f90	/^      real, allocatable :: phib /;"	v
phibx	main.f90	/^      real, allocatable :: phibx /;"	v
phibx	prog.h	/^      real phibx,phiby$/;"	v
phiby	main.f90	/^      real, allocatable :: phiby /;"	v
pi	pconst.h	/^      real pi,torad,radius,omega,grav$/;"	v
pmn	main.f90	/^      real, allocatable :: pmn /;"	v
pmtm	main.f90	/^      real, allocatable :: pmtm /;"	v
pmtp	main.f90	/^      real, allocatable :: pmtp /;"	v
pmum	main.f90	/^      real, allocatable :: pmum /;"	v
pmup	main.f90	/^      real, allocatable :: pmup /;"	v
pn	main.f90	/^      real, allocatable :: pn /;"	v
processor_name	main.f90	/^      character* (mpi_max_processor_name)/;"	v
prsgrd	prsgrd.f90	/^      subroutine prsgrd(/;"	s
ps	main.f90	/^      real, allocatable :: ps /;"	v
pt	main.f90	/^      real, allocatable :: pt /;"	v
r120	pconst.h	/^      real r120,r150,r180,r365$/;"	v
r150	pconst.h	/^      real r120,r150,r180,r365$/;"	v
r180	pconst.h	/^      real r120,r150,r180,r365$/;"	v
r1a	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
r1a	main.f90	/^      real, allocatable :: r1a /;"	v
r1b	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
r1b	main.f90	/^      real, allocatable :: r1b /;"	v
r1c	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
r1c	main.f90	/^      real, allocatable :: r1c /;"	v
r1d	main.f90	/^      real, allocatable :: r1d /;"	v
radius	pconst.h	/^      real pi,torad,radius,omega,grav$/;"	v
rc	main.f90	/^      integer myid,numprocs,namelen,rc,/;"	v
rdeltap	param.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
rdeltap	scalar.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
rdeltap	scalar.h	/^!      common \/scalar\/ deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
rdeltat	param.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
rdeltat	scalar.h	/^      real    decibar,deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
rdeltat	scalar.h	/^!      common \/scalar\/ deltap,rdeltap,deltat,deltas,rdeltat,rdeltas$/;"	v
rdens	density.f90	/^      function rdens(/;"	f
rdxt	grdvar.h	/^      real rdxt,rdxu,rdyt,rdyu,rdy$/;"	v
rdxt	main.f90	/^      real, allocatable :: rdxt /;"	v
rdxu	grdvar.h	/^      real rdxt,rdxu,rdyt,rdyu,rdy$/;"	v
rdxu	main.f90	/^      real, allocatable :: rdxu /;"	v
rdy	main.f90	/^      real rdy,/;"	v
rdyt	grdvar.h	/^      real rdxt,rdxu,rdyt,rdyu,rdy$/;"	v
rdyt	main.f90	/^      real, allocatable :: rdyt /;"	v
rdyu	grdvar.h	/^      real rdxt,rdxu,rdyt,rdyu,rdy$/;"	v
rdyu	main.f90	/^      real, allocatable :: rdyu /;"	v
rdz	main.f90	/^      real, allocatable :: rdz /;"	v
rdz0	main.f90	/^      real, allocatable :: rdz0 /;"	v
rdzw	main.f90	/^      real, allocatable :: rdzw /;"	v
readyc	readyc.f90	/^      subroutine readyc(/;"	s
readyt	readyt.f90	/^      subroutine readyt(/;"	s
reczhy	main.f90	/^      integer  mode_c,mode_t,reczhy,/;"	v
rho	main.f90	/^      real, allocatable :: rho /;"	v
rho	prog.h	/^      real spbt,rho,w$/;"	v
rho_0	pconst.h	/^      real rho_0,rrho_0$/;"	v
rho_ref	density.f90	/^      subroutine rho_ref(/;"	s
rhodp	main.f90	/^      real, allocatable :: rhodp /;"	v
rhoi	isopyc.h	/^      real    rhoi,e$/;"	v
rhoi	main.f90	/^      real, allocatable :: rhoi /;"	v
runlen	scalar.h	/^!      common \/switcr\/ runlen,restrt$/;"	v
rzu	main.f90	/^      real, allocatable :: rzu /;"	v
sdxt	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
sdxt	main.f90	/^      real, allocatable :: sdxt /;"	v
sdxu	grdvar.h	/^      real cv1,cv2,sdxt,sdxu,r1a,r1b,r1c,r1d$/;"	v
sdxu	main.f90	/^      real, allocatable :: sdxu /;"	v
seadp	main.f90	/^      real rdy,area,seadp(/;"	v
setbcx	isopyc.f90	/^      subroutine setbcx /;"	s
setcon	setcon.f90	/^      subroutine setcon(/;"	s
setpbt	setpbt.f90	/^      subroutine setpbt(/;"	s
setpn	setpn.f90	/^      subroutine setpn(/;"	s
simt	param.h	/^      integer simt,sjmt,bcfrec$/;"	v
sjmt	param.h	/^      integer simt,sjmt,bcfrec$/;"	v
slmxr	param.h	/^      real slmxr,ahisop,athkdf,smth_start_nlat,smth_start_slat$/;"	v
smn	main.f90	/^      real, allocatable :: smn /;"	v
smth	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
smth2	filter.f90	/^      subroutine smth2(/;"	s
smth3	filter.f90	/^      subroutine smth3(/;"	s
smth_start_nlat	param.h	/^      real slmxr,ahisop,athkdf,smth_start_nlat,smth_start_slat$/;"	v
smths	filter.f90	/^      subroutine smths(/;"	s
snbc	param.h	/^      integer snbc,gm90,implicitvmix,asselin_b,asselin_c,asselin_t,smth,unesco$/;"	v
south	main.f90	/^      integer west,east,north,south,/;"	v
spbt	main.f90	/^      real, allocatable :: spbt /;"	v
startime	main.f90	/^      real rdy,area,seadp(10000),startime,/;"	v
status	main.f90	/^      integer west,east,north,south,status(/;"	v
swap_array_int2d	density.f90	/^      subroutine swap_array_int2d(/;"	s
swap_array_real1d	density.f90	/^      subroutine swap_array_real1d(/;"	s
swap_array_real2d	density.f90	/^      subroutine swap_array_real2d(/;"	s
swap_array_real3d	density.f90	/^      subroutine swap_array_real3d(/;"	s
swap_array_real4d	density.f90	/^      subroutine swap_array_real4d(/;"	s
swap_array_real5d	density.f90	/^      subroutine swap_array_real5d(/;"	s
swap_ew_real3d	density.f90	/^      subroutine swap_ew_real3d(/;"	s
swap_isopy_real3d	density.f90	/^      subroutine swap_isopy_real3d(/;"	s
swap_isopy_real4d	density.f90	/^      subroutine swap_isopy_real4d(/;"	s
swap_isopyw_real3d	density.f90	/^      subroutine swap_isopyw_real3d(/;"	s
swap_ns_real3d	density.f90	/^      subroutine swap_ns_real3d(/;"	s
t	main.f90	/^      real, allocata/;"	v
t	prog.h	/^      real t,up,vp,pbt,upb,vpb$/;"	v
test_mpi	main.f90	/^      integer  mode_c,mode_t,reczhy,test_mpi$/;"	v
tmask	main.f90	/^      real, allocatable :: tmask /;"	v
tmn	main.f90	/^      real, allocatable :: tmn /;"	v
torad	pconst.h	/^      real pi,torad,radius,omega,grav$/;"	v
tracer	tracer.f90	/^      subroutine tracer(/;"	s
umask	main.f90	/^      real, allocatable :: umask /;"	v
umm	main.f90	/^      real, allocatable :: umm /;"	v
umn	main.f90	/^      real, allocatable :: umn /;"	v
ump	main.f90	/^      real, allocatable :: ump /;"	v
undens	density.f90	/^      function undens(/;"	f
unrdens	density.f90	/^      function unrdens(/;"	f
up	main.f90	/^      real, allocatable :: up /;"	v
up	prog.h	/^      real t,up,vp,pbt,upb,vpb$/;"	v
upb	main.f90	/^      real, allocatable :: upb /;"	v
upb	prog.h	/^      real t,up,vp,pbt,upb,vpb$/;"	v
upwelling	upwelling.f90	/^      subroutine upwelling(/;"	s
vinteg	vinteg.f90	/^      subroutine vinteg(/;"	s
vinteg_ew	vinteg.f90	/^      subroutine vinteg_ew(/;"	s
vinteg_ns	vinteg.f90	/^      subroutine vinteg_ns(/;"	s
vmm	main.f90	/^      real, allocatable :: vmm /;"	v
vmn	main.f90	/^      real, allocatable :: vmn /;"	v
vmp	main.f90	/^      real, allocatable :: vmp /;"	v
vp	main.f90	/^      real, allocatable :: vp /;"	v
vp	prog.h	/^      real t,up,vp,pbt,upb,vpb$/;"	v
vpb	main.f90	/^      real, allocatable :: vpb /;"	v
w	main.f90	/^      real, allocatable :: w /;"	v
west	main.f90	/^      integer west,/;"	v
wmn	main.f90	/^      real, allocatable :: wmn /;"	v
xmd	isopyc.h	/^      integer xup,xmd,xlo$/;"	v
year	calendar.h	/^      integer   month,year,mth,day$/;"	v
year	calendar.h	/^!      common \/calend\/ month,year,mth,day$/;"	v
year	param.h	/^      integer   month,year,mth,day$/;"	v
z	main.f90	/^      real, allocatable :: z /;"	v
z0	main.f90	/^      real, allocatable :: z0 /;"	v
zu	main.f90	/^      real, allocatable :: zu /;"	v
